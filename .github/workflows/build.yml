name: Build

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: vscode-privacy-tool
            asset_name: vscode-privacy-tool-linux-x86_64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: vscode-privacy-tool
            asset_name: vscode-privacy-tool-linux-aarch64

          # macOS
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: vscode-privacy-tool
            asset_name: vscode-privacy-tool-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: vscode-privacy-tool
            asset_name: vscode-privacy-tool-macos-aarch64

          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: vscode-privacy-tool.exe
            asset_name: vscode-privacy-tool-windows-x86_64.exe
          - os: windows-latest
            target: i686-pc-windows-msvc
            artifact_name: vscode-privacy-tool.exe
            asset_name: vscode-privacy-tool-windows-i686.exe
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            artifact_name: vscode-privacy-tool.exe
            asset_name: vscode-privacy-tool-windows-aarch64.exe

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Install cross-compilation tools
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu
        echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
    
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
    
    - name: Upload to release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v2
      with:
        files: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
        name: ${{ matrix.asset_name }}
